openapi: 3.0.3
info:
  title: Web API
  description: |-
  license:
    name: API WEB 1.0
    url: "http://localhost:8989/api/v0"
  version: 1.0.11

servers:
  - url: http://localhost:8989/api/v0
    description: Local server

tags:
  - name: Start
    description: Start API
  - name: Auth
    description: Auth API
  - name: User
    description: User
  - name: Category
    description: Category
  - name: Product
    description: Product
  - name: Discount
    description: Discount
paths:
  /:
    get:
      tags:
        - Start
      summary: Start API
      description: Start API
      operationId: start
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Start API"
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets

  /auth/register:
    post:
      tags:
        - Auth
      summary: Register user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserCreationRequest"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception

  /auth/register-admin:
    post:
      tags:
        - Auth
      description: register admin
      summary: Register admin
      operationId: register
      requestBody:
        description: Register admin
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserCreationRequest"
                - type: object
                  properties:
                    status_id:
                      type: integer
                      example: 2
          application/xml:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserCreationRequest"
                - type: object
                  properties:
                    status_id:
                      type: integer
                      example: 2
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: "#/components/schemas/UserCreationRequest"
                - type: object
                  properties:
                    status_id:
                      type: integer
                      example: 2
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception

  /auth/user:
    post:
      tags:
        - Auth
      description: auth by password and email
      summary: Auth by password and email
      requestBody:
        description: Auth by password and email
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthByUser"
          application/xml:
            schema:
              $ref: "#/components/schemas/AuthByUser"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AuthByUser"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
        "422":
          description: Validation exception

  /auth/token:
    post:
      tags:
        - Auth
      description: auth by token
      summary: Auth by token
      operationId: auth
      requestBody:
        description: Auth by token
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Token"
          application/xml:
            schema:
              $ref: "#/components/schemas/Token"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Token"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: Invalid ID supplied
        "404":
          description: Token not found
        "422":
          description: Validation exception

  /auth/change-password:
    post:
      tags:
        - Auth
      description: change password
      summary: Change password
      operationId: change
      requestBody:
        description: Change password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
          application/xml:
            schema:
              $ref: "#/components/schemas/ChangePassword"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ChangePassword"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
        "422":
          description: Validation exception
  /auth/forgot-password:
    post:
      tags:
        - Auth
      description: Forgot password
      summary: Forgot password
      operationId: forgot
      requestBody:
        description: Forgot password
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "phamtrungnguyenvx99@gmail.com"

        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
        "422":
          description: Validation exception

  /auth/reset-password:
    post:
      tags:
        - Auth
      description: Reset password
      summary: Reset password
      operationId: Reset
      requestBody:
        description: Reset password
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "phamtrungnguyenvx99@gmail.com"
                code:
                  type: string
                  example: "12345"
                newPassword:
                  type: string
                  example: "12345"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
        "422":
          description: Validation exception

  /auth/role:
    post:
      tags:
        - User
      description: add role
      summary: Add role
      operationId: addRole
      requestBody:
        description: Add role
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "admin"
              required:
                - name
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "admin"
              required:
                - name
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "admin"
              required:
                - name
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception

    get:
      tags:
        - User
      description: get role
      summary: Get role
      operationId: getRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "admin"
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: "admin"
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
  /auth/update-role:
    post:
      tags:
        - User
      description: update role
      operationId: updateRole
      requestBody:
        description: Update role
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
                roles_id:
                  type: integer
                  example: 1
              required:
                - userId
                - roles_id
          application/xml:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
                roles_id:
                  type: integer
                  example: 1
              required:
                - userId
                - roles_id
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
                roles_id:
                  type: integer
                  example: 1
              required:
                - userId
                - roles_id
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets

  /user/get-list:
    post:
      tags:
        - User
      description: get list user
      operationId: list
      summary: Get list user
      requestBody:
        description: Get list user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetUserList"
          application/xml:
            schema:
              $ref: "#/components/schemas/GetUserList"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/GetUserList"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            userId:
                              type: integer
                            userName:
                              type: string
                            roles_id:
                              type: integer
                            updatedDate:
                              type: string
                              format: date-time

                      meta:
                        type: object
                        properties:
                          total:
                            type: integer
                          totalPage:
                            type: integer
                  statusCode:
                    type: integer
                  message:
                    type: string

        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets

  /user:
    get:
      tags:
        - User
      description: get user
      operationId: getUser
      summary: Get user by id
      parameters:
        - name: id
          in: query
          description: id user
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            application/xml:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
        "422":
          description: Validation exception

    put:
      tags:
        - User
      description: update user
      operationId: update user
      summary: Update user
      requestBody:
        description: Update user
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                user_name:
                  type: string
                  example: "admin"

                full_name:
                  type: string
                  example: "admin"
                phone:
                  type: integer
                  example: 12345
                sex:
                  type: string
                  example: "NAM"
                avatar:
                  type: string
                  example: "admin"
                birthday:
                  type: string
                  format: date
                  example: "2024-04-14"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception

  /category:
    post:
      tags:
        - Category
      summary: Add category
      description: add category
      operationId: addCategory
      requestBody:
        description: Add category
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "admin"
                user_id:
                  type: integer
                  example: "11"
                image:
                  type: string
                  example: "https://example.com/images/web-development.jpg"
              required:
                - name
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "admin"
              required:
                - name
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "admin"
              required:
                - name
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets
    get:
      tags:
        - Category
      description: get all categories
      summary: Get all categories
      operationId: getAllCategories
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            user_id:
                              type: integer
                            popular:
                              type: integer
                            slug:
                              type: string
                            image:
                              type: string
                            updatedDate:
                              type: string
                              format: date-time

        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets
    put:
      tags:
        - Category
      description: update category
      summary: Update category
      operationId: updateCategory
      requestBody:
        description: Update category
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "web landingpage"
                user_id:
                  type: integer
                  example: "11"
                image:
                  type: string
                  example: "https://example.com/images/web-development.jpg"
              required:
                - id
                - name
          application/xml:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "admin"
              required:
                - id
                - name
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: "admin"
              required:
                - id
                - name
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets
    delete:
      tags:
        - Category
      description: delete category
      summary: Delete category
      parameters:
        - name: id
          in: query
          description: id category
          required: true
          schema:
            type: integer

      operationId: deleteCategory
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets

  /product:
    post:
      tags:
        - Product
      summary: Add product
      description: add product
      operationId: addProduct
      requestBody:
        description: Add product
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CombinedData"
          application/xml:
            schema:
              $ref: "#/components/schemas/CombinedData"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CombinedData"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets
    patch:
      tags:
        - Product
      summary: Update product
      description: update product
      operationId: updateProduct
      requestBody:
        description: Update product
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CombinedDataUpdate"
          application/xml:
            schema:
              $ref: "#/components/schemas/CombinedDataUpdate"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CombinedDataUpdate"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets

    delete:
      tags:
        - Product
      summary: Delete product
      description: delete product
      operationId: deleteProduct
      parameters:
        - name: id
          in: query
          description: id product
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets
  /product/:
    get:
      tags:
        - Product
      description: get one product
      operationId: get one Product
      parameters:
        - name: slug_product
          in: query
          description: slug product
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
            application/xml:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets
  /product/get-list:
    post:
      tags:
        - Product
      summary: chưa làm xong
      description: get product by user id
      operationId: getProductByUserId
      requestBody:
        description: Get product by user id
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InputData"
          application/xml:
            schema:
              $ref: "#/components/schemas/InputData"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InputData"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryProductResponse"
        "400":
          description: Invalid ID supplied

  /discount:
    post:
      tags:
        - Discount
      summary: Add discount
      description: add discount
      operationId: addDiscount
      requestBody:
        description: Add discount
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscountInput"
          application/xml:
            schema:
              $ref: "#/components/schemas/DiscountInput"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DiscountInput"
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
      # security:
      #   - petstore_auth:
      #       - write:pets
      #       - read:pets

    put:
      tags:
        - Discount
      summary: Update discount
      description: update discount
      operationId: updateDiscount
      requestBody:
        description: Update discount
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiscountInput"
          application/xml:
            schema:
              $ref: "#/components/schemas/DiscountInput"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/DiscountInput"
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "422":
          description: Validation exception
